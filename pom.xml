<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2012-2013 Peergreen S.A.S. All rights reserved.
 Proprietary and confidential.

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.peergreen</groupId>
  <artifactId>peergreen-pom</artifactId>
  <version>3.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Peergreen POM</name>

  <!-- Company description -->
  <organization>
    <name>Peergreen</name>
    <url>http://www.peergreen.com</url>
  </organization>

  <url>http://www.peergreen.com</url>

  <licenses>
    <license>
      <name>Peergreen Software License 1.0</name>
      <url>http://www.peergreen.com/Legal/Peergreen+Community+Binary+Code+License+Agreement</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <!-- Who worked on this project ? -->
  <developers />

  <properties>
    <!-- Avoid the annoying warning -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Use properties so they could be overridden if needed -->
    <pgDistMgmtSnapshotsUrl>https://forge.peergreen.com/nexus/content/repositories/snapshots</pgDistMgmtSnapshotsUrl>
    <pgDistMgmtReleasesUrl>https://forge.peergreen.com/nexus/content/repositories/releases</pgDistMgmtReleasesUrl>
    <ow2SourceAssemblyDescriptorRef>source-release</ow2SourceAssemblyDescriptorRef>
    <pgReleaseProfiles>pg-release</pgReleaseProfiles>
    <maven-source-assemblies.version>1.0.1</maven-source-assemblies.version>

    <!-- Used plugins default versions (make them overridable) -->
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <maven-gpg-plugin.version>1.4</maven-gpg-plugin.version>
    <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <maven-release-plugin.version>2.4.1</maven-release-plugin.version>
    <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
    <maven-bundle-plugin.version>2.3.7</maven-bundle-plugin.version>
    <bnd-ipojo-plugin.version>1.10.1</bnd-ipojo-plugin.version>
    <apache-rat-plugin.version>0.9</apache-rat-plugin.version>
    <maven-clean-plugin.version>2.4.1</maven-clean-plugin.version>
    <maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
    <maven-install-plugin.version>2.4</maven-install-plugin.version>
    <maven-site-plugin.version>3.3</maven-site-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-surefire-plugin.version>2.15</maven-surefire-plugin.version>

    <!-- Configurable plugin options : default values -->
    <compiler.source>1.7</compiler.source>
    <compiler.target>1.7</compiler.target>
    <jar.include.descriptor>false</jar.include.descriptor>
    <apache-rat-plugin.ignoreErrors>true</apache-rat-plugin.ignoreErrors>
    <bnd-plugin.attributes>metadata=${basedir}/src/main/bnd/ipojo.xml;use-local-schemas=true</bnd-plugin.attributes>
  </properties>

  <!-- Source Code Management -->
  <scm>
    <connection>scm:git:https://forge.peergreen.com/git/git/maven/peergreen-pom.git</connection>
    <developerConnection>scm:git:https://forge.peergreen.com/git/git/maven/peergreen-pom.git</developerConnection>
    <url>https://forge.peergreen.com/git/summary/?r=maven/peergreen-pom.git</url>
    <tag>HEAD</tag>
  </scm>

  <!-- Distribution -->
  <distributionManagement>

    <!-- Site omitted - each project must provide their own -->

    <!-- Release Repository (with staging):
         Refer to this server in your settings.xml using the 'peergreen.release' ID -->
    <repository>
      <id>peergreen.release</id>
      <name>Peergreen Maven Releases Repository</name>
      <url>${pgDistMgmtReleasesUrl}</url>
    </repository>

    <!-- Snapshots Repository:
         Refer to this server in your settings.xml using the 'peergreen.snapshot' ID -->
    <snapshotRepository>
      <id>peergreen.snapshot</id>
      <name>Peergreen Maven Snapshots Repository</name>
      <url>${pgDistMgmtSnapshotsUrl}</url>
    </snapshotRepository>
  </distributionManagement>

  <!-- ============================================================================================
     - TODO Remove the snapshots repositories from the super pom
     - Explanation:
     -  http://www.sonatype.com/people/2010/03/why-external-repos-are-being-phased-out-of-central/
     ============================================================================================ -->

  <!-- Plugin Repositories -->
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - Used to search plugins, plugins dependencies and build extensions
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <pluginRepositories>

    <pluginRepository>
      <id>peergreen-plugin-release</id>
      <name>Peergreen Release Plugin Repository</name>
      <url>https://forge.peergreen.com/nexus/content/repositories/releases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>peergreen-plugin-snapshot</id>
      <name>Peergreen Snapshot Plugin Repository</name>
      <url>https://forge.peergreen.com/nexus/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>

  </pluginRepositories>

  <!-- Repositories -->
  <repositories>

    <repository>
      <id>peergreen-release</id>
      <name>Peergreen Release Repository</name>
      <url>https://forge.peergreen.com/nexus/content/repositories/releases</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>peergreen-snapshot</id>
      <name>Peergreen Snapshot Repository</name>
      <url>https://forge.peergreen.com/nexus/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>

  </repositories>

  <build>

    <plugins>

      <!-- Enforce Maven version usage: at least Maven 3 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <!-- Cover all lifecycle with a 'validate' phase -->
            <id>enforce-default</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.0.0,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
          <!-- 'clean' and 'site' lifecycle do not have 'validate' phases,
               explicitly bind a plugin execution to their 'pre' phases -->
          <execution>
            <id>enforce-clean</id>
            <phase>pre-clean</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.0.0,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-site</id>
            <phase>pre-site</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.0.0,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Activate the bundle support by default -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <_include>-src/main/bnd/instructions.bnd</_include>
            <_plugin>org.apache.felix.ipojo.bnd.PojoizationPlugin;${bnd-plugin.attributes}</_plugin>
          </instructions>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>bnd-ipojo-plugin</artifactId>
            <version>${bnd-ipojo-plugin.version}</version>
          </dependency>
          <!-- Required when parsing iPOJO XML files -->
          <dependency>
            <groupId>xerces</groupId>
            <artifactId>xercesImpl</artifactId>
            <version>2.10.0</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- License header check -->
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>${apache-rat-plugin.version}</version>
        <executions>
          <execution>
            <id>legal</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <ignoreErrors>${apache-rat-plugin.ignoreErrors}</ignoreErrors>
              <includes>
                <include>src/**</include>
                <include>pom.xml</include>
              </includes>
              <licenses>
                <!--
                   RAT Do not supports licenses composition (copyright + text)
                   It will accept any file copyrighted peergreen OR containing the license text

                <license implementation="org.apache.rat.analysis.license.CopyrightHeader">
                  <copyrightOwner>Peergreen S.A.S.</copyrightOwner>
                </license>
                -->
                <license implementation="org.apache.rat.analysis.license.FullTextMatchingLicense">
                  <licenseFamilyCategory>PSL10</licenseFamilyCategory>
                  <licenseFamilyName>Peergreen Software License (PSL) 1.0</licenseFamilyName>
                  <fullText>
                    Peergreen S.A.S. All rights reserved.
                    Proprietary and confidential.

                    Unless required by applicable law or agreed to in writing, software
                    distributed under the License is distributed on an "AS IS" BASIS,
                    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                    See the License for the specific language governing permissions and
                    limitations under the License.
                  </fullText>
                </license>
              </licenses>
              <!-- Approved licenses families -->
              <licenseFamilies>
                <licenseFamily implementation="org.apache.rat.license.SimpleLicenseFamily">
                  <familyName>Peergreen Software License (PSL) 1.0</familyName>
                </licenseFamily>
              </licenseFamilies>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <!-- Default configuration of the maven-release-plugin:
             * 'release' profile not used
             * use 'pg-release' profile
           -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <mavenExecutorId>forked-path</mavenExecutorId>

            <!-- Do not use the default release profile, use our own instead -->
            <useReleaseProfile>false</useReleaseProfile>
            <!-- Our own release profile -->
            <releaseProfiles>${pgReleaseProfiles}</releaseProfiles>
            <!-- Sub-modules inherit the version of their parents -->
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <!-- Install the modules locally instead of just verify them -->
            <preparationGoals>clean install -Penforce-version-policy</preparationGoals>
            <!-- Do not add Xml Schema in the project document element -->
            <addSchema>false</addSchema>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.peergreen.maven</groupId>
              <artifactId>git-scm-provider</artifactId>
              <version>1.0.0</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Do not add META-INF/maven/... files by default -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <addMavenDescriptor>${jar.include.descriptor}</addMavenDescriptor>
            </archive>
          </configuration>
        </plugin>

        <!-- Compile from and for Java 7 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${compiler.source}</source>
            <target>${compiler.target}</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>

  <profiles>
    <profile>

      <id>pg-release</id>
      <build>
        <plugins>
          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <!--  Attach the sources to the project      -->
          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>

            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>

          </plugin>

          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <!--  Attach the javadoc to the project      -->
          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <executions>
              <execution>

                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <!--  Sign all the artifacts                 -->
          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>

                <goals>
                  <goal>sign</goal>
                </goals>

              </execution>
            </executions>
          </plugin>

          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <!--  Generates a source assembly            -->
          <!-- - - - - - - - - - - - - - - - - - - - - -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven-assembly-plugin.version}</version>
            <executions>
              <execution>
                <id>source-release-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <!-- Do not execute that plugin for all modules -->
                  <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
                  <descriptorRefs>
                    <descriptorRef>${ow2SourceAssemblyDescriptorRef}</descriptorRef>
                  </descriptorRefs>
                  <!-- Use GNU Tar -->
                  <tarLongFileMode>gnu</tarLongFileMode>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.ow2</groupId>
                <artifactId>maven-source-assemblies</artifactId>
                <version>${maven-source-assemblies.version}</version>
              </dependency>
            </dependencies>
          </plugin>

        </plugins>
      </build>

    </profile>

    <profile>
      <id>enforce-version-policy</id>
      <build>
        <plugins>
          <!-- - - - - - - - - - - - - - - - - - - - - - - -->
          <!-- Ensure plugins have their version specified -->
          <!-- - - - - - - - - - - - - - - - - - - - - - - -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <!-- Cover all lifecycle with a 'validate' phase -->
                <id>enforce-plugin-version</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requirePluginVersions />
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>


</project>

